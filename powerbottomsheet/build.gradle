apply from: "$rootDir/dependencies.gradle"

apply plugin: 'com.android.library'
apply plugin: 'de.mobilej.unmock'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'maven-publish'


androidExtensions {
    experimental = true
}

android {
    compileSdkVersion androidCompileSdkVersion
    defaultConfig {
        minSdkVersion 16
        targetSdkVersion androidCompileSdkVersion
        versionCode 2
        versionName "1.8"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
}

unMock {
    keep 'android.util.Log'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    compile "com.android.support:appcompat-v7:$supportLibraryVersion"
    compile "com.android.support:cardview-v7:$supportLibraryVersion"

    compile 'com.github.kylealanr:GestureDetectors:1.1'
    compile 'com.github.InkApplications:android-logger:4.1.0'

    compile "com.airbnb.android:epoxy:$expoxy_version"
    annotationProcessor "com.airbnb.android:epoxy-processor:$expoxy_version"
    kapt "com.airbnb.android:epoxy-processor:$expoxy_version"

    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.11.0'
    testCompile("com.nhaarman:mockito-kotlin:1.4.0") {
        exclude group: "org.jetbrains.kotlin", module: "kotlin-stdlib"
    }

    testCompile 'org.amshove.kluent:kluent:1.30'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId 'com.github.u1f4f1'
            artifactId 'PowerBottomSheet'
            version '1.8'
            artifact("$buildDir/outputs/aar/powerbottomsheet-release.aar")
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.compile.allDependencies.each {
                    if(it.group != null && (it.name != null || "unspecified" == it.name) && it.version != null)
                    {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}

publishToMavenLocal.dependsOn assemble

repositories {
    mavenCentral()
    maven { url  "http://dl.bintray.com/markusamshove/maven" }
}

